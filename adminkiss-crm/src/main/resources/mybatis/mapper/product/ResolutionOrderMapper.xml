<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.ResolutionOrderMapper" >
  <resultMap id="BaseResultMap" type="model.ResolutionOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="cpid" property="cpid" jdbcType="BIGINT" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="result_status" property="resultStatus" jdbcType="TINYINT" />
    <result column="created_uid" property="createdUid" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="last_modified_time" property="lastModifiedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="model.ResolutionOrderWithBLOBs" extends="BaseResultMap" >
    <result column="situation" property="situation" jdbcType="LONGVARCHAR" />
    <result column="resolution" property="resolution" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, cpid, start_time, end_time, result_status, created_uid, created_time, last_modified_time
  </sql>
  <sql id="Blob_Column_List" >
    situation, resolution
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resolution_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from resolution_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="model.ResolutionOrderWithBLOBs" >
    insert into resolution_order (id, cpid, start_time, 
      end_time, result_status, created_uid, 
      created_time, last_modified_time, situation, 
      resolution)
    values (#{id,jdbcType=BIGINT}, #{cpid,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{resultStatus,jdbcType=TINYINT}, #{createdUid,jdbcType=BIGINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{lastModifiedTime,jdbcType=TIMESTAMP}, #{situation,jdbcType=LONGVARCHAR}, 
      #{resolution,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.ResolutionOrderWithBLOBs" >
    insert into resolution_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cpid != null" >
        cpid,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="resultStatus != null" >
        result_status,
      </if>
      <if test="createdUid != null" >
        created_uid,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="lastModifiedTime != null" >
        last_modified_time,
      </if>
      <if test="situation != null" >
        situation,
      </if>
      <if test="resolution != null" >
        resolution,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cpid != null" >
        #{cpid,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resultStatus != null" >
        #{resultStatus,jdbcType=TINYINT},
      </if>
      <if test="createdUid != null" >
        #{createdUid,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedTime != null" >
        #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="situation != null" >
        #{situation,jdbcType=LONGVARCHAR},
      </if>
      <if test="resolution != null" >
        #{resolution,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.ResolutionOrderWithBLOBs" >
    update resolution_order
    <set >
      <if test="cpid != null" >
        cpid = #{cpid,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resultStatus != null" >
        result_status = #{resultStatus,jdbcType=TINYINT},
      </if>
      <if test="createdUid != null" >
        created_uid = #{createdUid,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedTime != null" >
        last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="situation != null" >
        situation = #{situation,jdbcType=LONGVARCHAR},
      </if>
      <if test="resolution != null" >
        resolution = #{resolution,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.ResolutionOrderWithBLOBs" >
    update resolution_order
    set cpid = #{cpid,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      result_status = #{resultStatus,jdbcType=TINYINT},
      created_uid = #{createdUid,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP},
      situation = #{situation,jdbcType=LONGVARCHAR},
      resolution = #{resolution,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.ResolutionOrder" >
    update resolution_order
    set cpid = #{cpid,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      result_status = #{resultStatus,jdbcType=TINYINT},
      created_uid = #{createdUid,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>